{"ast":null,"code":"import { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport history from \"./history\";\nimport rootReducer from \"./rootReducer\";\nconst router = routerMiddleware(history);\nconst middlewares = [thunk, router];\n/* istanbul ignore if  */\n\nif (process.env.NODE_ENV === \"development\") {\n  const {\n    createLogger\n  } = require(\"redux-logger\");\n\n  const logger = createLogger({\n    collapsed: true\n  }); //middlewares.push(logger);\n}\n\nconsole.log(history);\n\nfunction configureStore(initialState) {\n  return createStore(rootReducer, initialState, compose(applyMiddleware(...middlewares)));\n}\n\nexport default configureStore();","map":{"version":3,"sources":["/Users/trantuan/LaundryShop/laundry-shop-admin/application/src/common/store.js"],"names":["applyMiddleware","compose","createStore","thunk","routerMiddleware","history","rootReducer","router","middlewares","process","env","NODE_ENV","createLogger","require","logger","collapsed","console","log","configureStore","initialState"],"mappings":"AAAA,SAAQA,eAAR,EAAyBC,OAAzB,EAAkCC,WAAlC,QAAoD,OAApD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,gBAAR,QAA+B,wBAA/B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,MAAMC,MAAM,GAAQH,gBAAgB,CAACC,OAAD,CAApC;AACA,MAAMG,WAAW,GAAG,CAACL,KAAD,EAAQI,MAAR,CAApB;AAEA;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AACxC,QAAM;AAACC,IAAAA;AAAD,MAAiBC,OAAO,CAAC,cAAD,CAA9B;;AAEA,QAAMC,MAAM,GAAGF,YAAY,CAAC;AAACG,IAAAA,SAAS,EAAE;AAAZ,GAAD,CAA3B,CAHwC,CAIxC;AACH;;AACDC,OAAO,CAACC,GAAR,CAAYZ,OAAZ;;AACA,SAASa,cAAT,CAAwBC,YAAxB,EAAsC;AAClC,SAAOjB,WAAW,CACdI,WADc,EAEda,YAFc,EAGdlB,OAAO,CACHD,eAAe,CAAC,GAAGQ,WAAJ,CADZ,CAHO,CAAlB;AAOH;;AAED,eAAeU,cAAc,EAA7B","sourcesContent":["import {applyMiddleware, compose, createStore} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {routerMiddleware} from \"connected-react-router\";\nimport history from \"./history\";\nimport rootReducer from \"./rootReducer\";\nconst router      = routerMiddleware(history);\nconst middlewares = [thunk, router];\n\n/* istanbul ignore if  */\n\nif (process.env.NODE_ENV === \"development\") {\n    const {createLogger} = require(\"redux-logger\");\n\n    const logger = createLogger({collapsed: true});\n    //middlewares.push(logger);\n}\nconsole.log(history)\nfunction configureStore(initialState) {\n    return createStore(\n        rootReducer,\n        initialState,\n        compose(\n            applyMiddleware(...middlewares),\n        )\n    );\n}\n\nexport default configureStore();\n"]},"metadata":{},"sourceType":"module"}