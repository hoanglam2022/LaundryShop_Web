{"ast":null,"code":"import { FETCH_USER_GENERAL_ACTION, FETCH_USER_ORDERS_ACTION, FETCH_USER_TRANSACTIONS_ACTION, PENDING_FETCH_USER_GENERAL_ACTION, PENDING_FETCH_USER_ORDERS_ACTION, PENDING_FETCH_USER_TRANSACTIONS_ACTION } from \"./constants\";\nimport db from \"../../../database/firestore\";\nconst refMstUser = db.collection('mst_user'); // ========================== User general ==========================\n\nexport function fetchUserGeneral(username) {\n  return dispatch => {\n    dispatch(pendingFetchUserGeneralAction());\n    return refMstUser.where('username', '==', username).limit(1).get().then(snapshot => {\n      let data = null;\n      snapshot.forEach(doc => {\n        data = {\n          id: doc.id,\n          ...doc.data(),\n          balance: 0\n        };\n        return refMstUser.doc(doc.id).collection('transactions').get().then(snapshot_tran => {\n          let balance = 0;\n          snapshot_tran.forEach(doc_tran => {\n            balance += parseInt(doc_tran.data().amount);\n          });\n          data.balance = balance;\n        }).finally(() => {\n          dispatch(fetchUserGeneralAction(dispatch, {\n            data: data\n          }));\n        });\n      });\n    });\n  };\n}\nexport function pendingFetchUserGeneralAction() {\n  return {\n    type: PENDING_FETCH_USER_GENERAL_ACTION,\n    payload: true\n  };\n}\nexport function fetchUserGeneralAction(dispatch, data) {\n  return {\n    type: FETCH_USER_GENERAL_ACTION,\n    payload: data.data\n  };\n} //========================== User transactions ==========================\n\nexport function fetchUserTransactions(username) {\n  return dispatch => {\n    dispatch(pendingFetchUserTransactionsAction());\n    return refMstUser.where('username', '==', username).limit(1).get().then(snapshot => {\n      snapshot.forEach(doc => {\n        let list = [];\n        return refMstUser.doc(doc.id).collection('transactions').get().then(snapshot_tran => {\n          snapshot_tran.forEach(doc_tran => {\n            let item = {\n              id: doc_tran.id,\n              ...doc_tran.data()\n            };\n            list.push(item);\n          });\n        }).finally(() => {\n          dispatch(fetchUserTransactionAction(dispatch, {\n            data: list\n          }));\n        });\n      });\n    });\n  };\n}\nexport function pendingFetchUserTransactionsAction() {\n  return {\n    type: PENDING_FETCH_USER_TRANSACTIONS_ACTION,\n    payload: true\n  };\n}\nexport function fetchUserTransactionAction(dispatch, data) {\n  return {\n    type: FETCH_USER_TRANSACTIONS_ACTION,\n    payload: data.data !== undefined && data.data !== null ? data.data : []\n  };\n} // ========================== User orders ==========================\n\nexport function fetchUserOrders(username) {\n  return dispatch => {\n    dispatch(pendingFetchUserOrdersAction());\n    return refMstUser.where('username', '==', username).limit(1).get().then(snapshot => {\n      snapshot.forEach(doc => {\n        let list = [];\n        return refMstUser.doc(doc.id).collection('orders').get().then(snapshot_order => {\n          snapshot_order.forEach(doc_order => {\n            let item = {\n              id: doc_order.id,\n              ...doc_order.data()\n            };\n            list.push(item);\n          });\n        }).finally(() => {\n          dispatch(fetchUserOrdersAction(dispatch, {\n            data: list\n          }));\n        });\n      });\n    });\n  };\n}\nexport function pendingFetchUserOrdersAction() {\n  return {\n    type: PENDING_FETCH_USER_ORDERS_ACTION,\n    payload: true\n  };\n}\nexport function fetchUserOrdersAction(dispatch, data) {\n  return {\n    type: FETCH_USER_ORDERS_ACTION,\n    payload: data.data !== undefined && data.data !== null ? data.data : []\n  };\n}","map":{"version":3,"sources":["/Users/trantuan/LaundryShop/laundry-shop-admin/application/src/features/Users/redux/actions.js"],"names":["FETCH_USER_GENERAL_ACTION","FETCH_USER_ORDERS_ACTION","FETCH_USER_TRANSACTIONS_ACTION","PENDING_FETCH_USER_GENERAL_ACTION","PENDING_FETCH_USER_ORDERS_ACTION","PENDING_FETCH_USER_TRANSACTIONS_ACTION","db","refMstUser","collection","fetchUserGeneral","username","dispatch","pendingFetchUserGeneralAction","where","limit","get","then","snapshot","data","forEach","doc","id","balance","snapshot_tran","doc_tran","parseInt","amount","finally","fetchUserGeneralAction","type","payload","fetchUserTransactions","pendingFetchUserTransactionsAction","list","item","push","fetchUserTransactionAction","undefined","fetchUserOrders","pendingFetchUserOrdersAction","snapshot_order","doc_order","fetchUserOrdersAction"],"mappings":"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","sourcesContent":["import {\n    FETCH_USER_GENERAL_ACTION,\n    FETCH_USER_ORDERS_ACTION,\n    FETCH_USER_TRANSACTIONS_ACTION,\n    PENDING_FETCH_USER_GENERAL_ACTION,\n    PENDING_FETCH_USER_ORDERS_ACTION,\n    PENDING_FETCH_USER_TRANSACTIONS_ACTION,\n} from \"./constants\";\nimport db from \"../../../database/firestore\";\n\nconst refMstUser = db.collection('mst_user')\n\n// ========================== User general ==========================\nexport function fetchUserGeneral(username) {\n    return dispatch => {\n        dispatch(pendingFetchUserGeneralAction())\n        return refMstUser.where('username', '==', username).limit(1).get().then(snapshot => {\n            let data = null;\n            snapshot.forEach(doc => {\n                data = {\n                    id: doc.id,\n                    ...doc.data(),\n                    balance: 0\n                }\n\n                return refMstUser.doc(doc.id).collection('transactions').get().then(snapshot_tran => {\n                    let balance = 0;\n                    snapshot_tran.forEach(doc_tran => {\n                        balance += parseInt(doc_tran.data().amount)\n                    })\n                    data.balance = balance;\n                }).finally(() => {\n                    dispatch(fetchUserGeneralAction(dispatch, {data: data}));\n                });\n            });\n        })\n    }\n}\n\nexport function pendingFetchUserGeneralAction() {\n    return {\n        type: PENDING_FETCH_USER_GENERAL_ACTION,\n        payload: true\n    };\n}\n\nexport function fetchUserGeneralAction(dispatch, data) {\n    return {\n        type: FETCH_USER_GENERAL_ACTION,\n        payload: data.data\n    };\n}\n\n//========================== User transactions ==========================\nexport function fetchUserTransactions(username) {\n    return dispatch => {\n        dispatch(pendingFetchUserTransactionsAction())\n        return refMstUser.where('username', '==', username).limit(1).get().then(snapshot => {\n            snapshot.forEach(doc => {\n                let list = [];\n                return refMstUser.doc(doc.id).collection('transactions').get().then(snapshot_tran => {\n                    snapshot_tran.forEach(doc_tran => {\n                        let item = {\n                            id: doc_tran.id,\n                            ...doc_tran.data()\n                        }\n                        list.push(item);\n                    })\n                }).finally(() => {\n                    dispatch(fetchUserTransactionAction(dispatch, {data: list}));\n                });\n            });\n        })\n    }\n}\n\nexport function pendingFetchUserTransactionsAction() {\n    return {\n        type: PENDING_FETCH_USER_TRANSACTIONS_ACTION,\n        payload: true\n    };\n}\n\nexport function fetchUserTransactionAction(dispatch, data) {\n    return {\n        type: FETCH_USER_TRANSACTIONS_ACTION,\n        payload: data.data !== undefined && data.data !== null ? data.data : []\n    };\n}\n\n// ========================== User orders ==========================\nexport function fetchUserOrders(username) {\n    return dispatch => {\n        dispatch(pendingFetchUserOrdersAction())\n        return refMstUser.where('username', '==', username).limit(1).get().then(snapshot => {\n            snapshot.forEach(doc => {\n                let list = [];\n                return refMstUser.doc(doc.id).collection('orders').get().then(snapshot_order => {\n                    snapshot_order.forEach(doc_order => {\n                        let item = {\n                            id: doc_order.id,\n                            ...doc_order.data()\n                        }\n                        list.push(item);\n                    })\n                }).finally(() => {\n                    dispatch(fetchUserOrdersAction(dispatch, {data: list}));\n                });\n            });\n        })\n    }\n}\n\nexport function pendingFetchUserOrdersAction() {\n    return {\n        type: PENDING_FETCH_USER_ORDERS_ACTION,\n        payload: true\n    };\n}\n\nexport function fetchUserOrdersAction(dispatch, data) {\n    return {\n        type: FETCH_USER_ORDERS_ACTION,\n        payload: data.data !== undefined && data.data !== null ? data.data : []\n    };\n}\n"]},"metadata":{},"sourceType":"module"}