{"ast":null,"code":"// Initial state is the place you define all initial values for the Redux store of the feature.\n// In the 'standard' way, initialState is defined in reducers: http://redux.js.org/docs/basics/Reducers.html\n// But when application grows, there will be multiple reducers files, it's not intuitive what data is managed by the whole store.\n// So Rekit extracts the initial state definition into a separate module so that you can have\n// a quick view about what data is used for the feature, at any time.\n// NOTE: initialState constant is necessary so that Rekit could auto add initial state when creating async actions.\nconst initialState = {\n  users: [],\n  fetchUsersPending: false\n};\nexport default initialState;","map":{"version":3,"sources":["/Users/trantuan/LaundryShop/laundry-shop-admin/application/src/features/Home/redux/initialState.js"],"names":["initialState","users","fetchUsersPending"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAc,EADF;AAEjBC,EAAAA,iBAAiB,EAAE;AAFF,CAArB;AAKA,eAAeF,YAAf","sourcesContent":["// Initial state is the place you define all initial values for the Redux store of the feature.\n// In the 'standard' way, initialState is defined in reducers: http://redux.js.org/docs/basics/Reducers.html\n// But when application grows, there will be multiple reducers files, it's not intuitive what data is managed by the whole store.\n// So Rekit extracts the initial state definition into a separate module so that you can have\n// a quick view about what data is used for the feature, at any time.\n\n// NOTE: initialState constant is necessary so that Rekit could auto add initial state when creating async actions.\n\nconst initialState = {\n    users            : [],\n    fetchUsersPending: false,\n};\n\nexport default initialState;\n"]},"metadata":{},"sourceType":"module"}