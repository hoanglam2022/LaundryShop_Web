{"ast":null,"code":"var _jsxFileName = \"/Users/trantuan/LaundryShop/laundry-shop-admin/application/src/features/Users/views/UserDetail/Container.js\";\nimport React, { Component } from 'react';\nimport President from './President';\nimport { connect } from 'react-redux';\nimport { fetchUserGeneral, fetchUserOrders, fetchUserTransactions } from \"../../redux/actions\";\nimport { createMatchSelector } from \"connected-react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Container extends Component {\n  render() {\n    const reducer = this.props.user;\n    const generalMenu = ['orders-create', 'transactions-create'];\n    return /*#__PURE__*/_jsxDEV(President, {\n      user: reducer.user,\n      pendingFetchGeneral: reducer.pendingFetchGeneral,\n      orders: reducer.orders,\n      pendingFetchOrders: reducer.pendingFetchOrders,\n      transactions: reducer.transactions,\n      pendingFetchTransactions: reducer.pendingFetchTransactions,\n      generalMenu: generalMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this);\n  }\n\n  componentDidMount() {\n    const auth = this.props.auth;\n    const {\n      username\n    } = this.props.match.params;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${auth.token}`\n      }\n    };\n    this.props.fetchUserGeneral(username);\n    this.props.fetchUserTransactions(username, config);\n    this.props.fetchUserOrders(username, config);\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchUserGeneral: username => {\n      dispatch(fetchUserGeneral(username));\n    },\n    fetchUserTransactions: (username, config) => {\n      dispatch(fetchUserTransactions(username, config));\n    },\n    fetchUserOrders: (username, config) => {\n      dispatch(fetchUserOrders(username, config));\n    }\n  };\n}\n\nfunction mapStateToProps(state) {\n  const matchSelector = createMatchSelector(\"/users/:username\");\n  return {\n    auth: state.auth,\n    user: state.user,\n    match: matchSelector(state)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Container);","map":{"version":3,"sources":["/Users/trantuan/LaundryShop/laundry-shop-admin/application/src/features/Users/views/UserDetail/Container.js"],"names":["React","Component","President","connect","fetchUserGeneral","fetchUserOrders","fetchUserTransactions","createMatchSelector","Container","render","reducer","props","user","generalMenu","pendingFetchGeneral","orders","pendingFetchOrders","transactions","pendingFetchTransactions","componentDidMount","auth","username","match","params","config","headers","Authorization","token","mapDispatchToProps","dispatch","mapStateToProps","state","matchSelector"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,gBAAR,EAA0BC,eAA1B,EAA2CC,qBAA3C,QAAuE,qBAAvE;AACA,SAAQC,mBAAR,QAAkC,wBAAlC;;;AAEA,MAAMC,SAAN,SAAwBP,SAAxB,CAAkC;AAC9BQ,EAAAA,MAAM,GAAG;AACL,UAAMC,OAAO,GAAG,KAAKC,KAAL,CAAWC,IAA3B;AACA,UAAMC,WAAW,GAAG,CAClB,eADkB,EAElB,qBAFkB,CAApB;AAIA,wBACI,QAAC,SAAD;AACI,MAAA,IAAI,EAAEH,OAAO,CAACE,IADlB;AAEI,MAAA,mBAAmB,EAAEF,OAAO,CAACI,mBAFjC;AAGI,MAAA,MAAM,EAAEJ,OAAO,CAACK,MAHpB;AAII,MAAA,kBAAkB,EAAEL,OAAO,CAACM,kBAJhC;AAKI,MAAA,YAAY,EAAEN,OAAO,CAACO,YAL1B;AAMI,MAAA,wBAAwB,EAAEP,OAAO,CAACQ,wBANtC;AAOI,MAAA,WAAW,EAAEL;AAPjB;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AAEDM,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,IAAI,GAAS,KAAKT,KAAL,CAAWS,IAA9B;AACA,UAAM;AAACC,MAAAA;AAAD,QAAa,KAAKV,KAAL,CAAWW,KAAX,CAAiBC,MAApC;AACA,UAAMC,MAAM,GAAO;AACfC,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAG,UAASN,IAAI,CAACO,KAAM;AAArC;AADM,KAAnB;AAGA,SAAKhB,KAAL,CAAWP,gBAAX,CAA4BiB,QAA5B;AACA,SAAKV,KAAL,CAAWL,qBAAX,CAAiCe,QAAjC,EAA2CG,MAA3C;AACA,SAAKb,KAAL,CAAWN,eAAX,CAA2BgB,QAA3B,EAAqCG,MAArC;AACH;;AA7B6B;;AAgClC,SAASI,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHzB,IAAAA,gBAAgB,EAAGiB,QAAD,IAAc;AAC5BQ,MAAAA,QAAQ,CAACzB,gBAAgB,CAACiB,QAAD,CAAjB,CAAR;AACH,KAHE;AAIHf,IAAAA,qBAAqB,EAAE,CAACe,QAAD,EAAWG,MAAX,KAAsB;AACzCK,MAAAA,QAAQ,CAACvB,qBAAqB,CAACe,QAAD,EAAWG,MAAX,CAAtB,CAAR;AACH,KANE;AAOHnB,IAAAA,eAAe,EAAE,CAACgB,QAAD,EAAWG,MAAX,KAAsB;AACnCK,MAAAA,QAAQ,CAACxB,eAAe,CAACgB,QAAD,EAAWG,MAAX,CAAhB,CAAR;AACH;AATE,GAAP;AAWH;;AAED,SAASM,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,QAAMC,aAAa,GAAGzB,mBAAmB,CAAC,kBAAD,CAAzC;AACA,SAAO;AACHa,IAAAA,IAAI,EAAEW,KAAK,CAACX,IADT;AAEHR,IAAAA,IAAI,EAAEmB,KAAK,CAACnB,IAFT;AAGHU,IAAAA,KAAK,EAAEU,aAAa,CAACD,KAAD;AAHjB,GAAP;AAKH;;AAED,eAAe5B,OAAO,CAAC2B,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CpB,SAA7C,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport President from './President';\nimport {connect} from 'react-redux';\nimport {fetchUserGeneral, fetchUserOrders, fetchUserTransactions} from \"../../redux/actions\";\nimport {createMatchSelector} from \"connected-react-router\";\n\nclass Container extends Component {\n    render() {\n        const reducer = this.props.user;\n        const generalMenu = [\n          'orders-create',\n          'transactions-create',\n        ];\n        return (\n            <President\n                user={reducer.user}\n                pendingFetchGeneral={reducer.pendingFetchGeneral}\n                orders={reducer.orders}\n                pendingFetchOrders={reducer.pendingFetchOrders}\n                transactions={reducer.transactions}\n                pendingFetchTransactions={reducer.pendingFetchTransactions}\n                generalMenu={generalMenu}\n            />\n        )\n    }\n\n    componentDidMount() {\n        const auth       = this.props.auth;\n        const {username} = this.props.match.params;\n        const config     = {\n            headers: {Authorization: `Bearer ${auth.token}`}\n        }\n        this.props.fetchUserGeneral(username)\n        this.props.fetchUserTransactions(username, config)\n        this.props.fetchUserOrders(username, config)\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        fetchUserGeneral: (username) => {\n            dispatch(fetchUserGeneral(username));\n        },\n        fetchUserTransactions: (username, config) => {\n            dispatch(fetchUserTransactions(username, config));\n        },\n        fetchUserOrders: (username, config) => {\n            dispatch(fetchUserOrders(username, config));\n        },\n    };\n}\n\nfunction mapStateToProps(state) {\n    const matchSelector = createMatchSelector(\"/users/:username\");\n    return {\n        auth: state.auth,\n        user: state.user,\n        match: matchSelector(state)\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Container)"]},"metadata":{},"sourceType":"module"}