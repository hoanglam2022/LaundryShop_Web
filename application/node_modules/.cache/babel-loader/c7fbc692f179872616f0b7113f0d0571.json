{"ast":null,"code":"import { FETCH_USERS, FETCH_USERS_PENDING } from \"./constants\";\nexport function fetchUser() {\n  return dispatch => {\n    dispatch(fetchUsersPendingAction());\n    let list = [];\n    dispatch(fetchUsersAction(dispatch, {\n      data: list\n    }));\n    /* return refMstUser.get().then(snapshot => {\n     snapshot.forEach(doc => {\n     let item = {\n     id: doc.id,\n     ...doc.data()\n     }\n     list.push(item);\n     });\n     }).catch(error => {\n     console.log(error)\n     }).finally(() => {\n     dispatch(fetchUsersAction(dispatch, {data: list}));\n     });*/\n  };\n}\nexport function fetchUsersPendingAction() {\n  return {\n    type: FETCH_USERS_PENDING,\n    payload: null\n  };\n}\nexport function fetchUsersAction(dispatch, data) {\n  return {\n    type: FETCH_USERS,\n    payload: data.data\n  };\n}","map":{"version":3,"sources":["/Users/trantuan/LaundryShop/laundry-shop-admin/application/src/features/Home/redux/actions.js"],"names":["FETCH_USERS","FETCH_USERS_PENDING","fetchUser","dispatch","fetchUsersPendingAction","list","fetchUsersAction","data","type","payload"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,mBAArB,QAA+C,aAA/C;AAEA,OAAO,SAASC,SAAT,GAAqB;AACxB,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACC,uBAAuB,EAAxB,CAAR;AACA,QAAIC,IAAI,GAAG,EAAX;AACAF,IAAAA,QAAQ,CAACG,gBAAgB,CAACH,QAAD,EAAW;AAACI,MAAAA,IAAI,EAAEF;AAAP,KAAX,CAAjB,CAAR;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACK,GAjBD;AAkBH;AAED,OAAO,SAASD,uBAAT,GAAmC;AACtC,SAAO;AACHI,IAAAA,IAAI,EAAKP,mBADN;AAEHQ,IAAAA,OAAO,EAAE;AAFN,GAAP;AAIH;AAED,OAAO,SAASH,gBAAT,CAA0BH,QAA1B,EAAoCI,IAApC,EAA0C;AAC7C,SAAO;AACHC,IAAAA,IAAI,EAAKR,WADN;AAEHS,IAAAA,OAAO,EAAEF,IAAI,CAACA;AAFX,GAAP;AAIH","sourcesContent":["import {FETCH_USERS, FETCH_USERS_PENDING} from \"./constants\";\n\nexport function fetchUser() {\n    return dispatch => {\n        dispatch(fetchUsersPendingAction());\n        let list = [];\n        dispatch(fetchUsersAction(dispatch, {data: list}));\n        /* return refMstUser.get().then(snapshot => {\n         snapshot.forEach(doc => {\n         let item = {\n         id: doc.id,\n         ...doc.data()\n         }\n         list.push(item);\n         });\n         }).catch(error => {\n         console.log(error)\n         }).finally(() => {\n         dispatch(fetchUsersAction(dispatch, {data: list}));\n         });*/\n    }\n}\n\nexport function fetchUsersPendingAction() {\n    return {\n        type   : FETCH_USERS_PENDING,\n        payload: null\n    };\n}\n\nexport function fetchUsersAction(dispatch, data) {\n    return {\n        type   : FETCH_USERS,\n        payload: data.data\n    };\n}"]},"metadata":{},"sourceType":"module"}